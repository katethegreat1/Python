# 第2课 if条件判断与条件嵌套

# 上一关--如何与Python沟通的语言大关——通过三种数据类型（字符串、整数和浮点数）的相互转换,突破语言差异的墙，将代码成功执行。
# 但是，对于Python来讲，光掌握正确的沟通语言还不够，还需要正确的沟通逻辑，才能让Python准确地执行你的命令。

# 1. 单向判断：if
# ---如果…就…的单向逻辑，如果满足条件，就执行结果。

stonenumber=6
#为宝石数量赋值
if stonenumber>=6:
    #条件：如果你拥有的宝石数量大于等于6个
    print('你拥有了毁灭宇宙的力量')
    #结果：显示‘你拥有了毁灭宇宙的力量’的结果

#首先，第一行代码，用赋值运算符=对当前情况进行赋值：将你拥有的宝石个数6赋值给变量——宝石数stonenumber。
#第二步，确定if条件：如果变量stonenumber的值>=个数6时，就执行冒号后，下一行的命令。
#第三步，用print()命令打印出结果：你拥有了毁灭宇宙的力量。

#   缩进Indentation

#对于Python而言，冒号和缩进Indentation是一种语法。它会帮助Python区分代码之间的层次，理解条件执行的逻辑及先后顺序。
#此时，被缩进的内容（print()函数）和if条件语句组成了一个代码块（一个整体），成为了if条件下的内部命令。
# 这意味着：如果赋值满足if条件，计算机就会准确执行if条件内部的命令。

#  2. 双向判断：if…else…

stonenumber=3
#赋值语句：为宝石数量赋值
if stonenumber>=6:
    #条件：如果你拥有的宝石数量大于等于6个
    print('你拥有了毁灭宇宙的力量')
    #结果：显示‘你拥有了毁灭宇宙的力量’的结果
else:
    #条件：当赋值不满足if条件时，执行else下的命令
    print('带着卡魔拉去沃弥尔星寻找灵魂宝石')
    #结果：显示‘去找灵魂宝石’的结果

# 我们归纳一下if...else正确运行的语句逻辑：
# （1）if和else两个条件判断是平级关系；
# （2）当if条件不被满足时，才会执行else下的命令。

# 前天晚上，酱酱无比纠结自己要不要吃夜宵，所以她打算上秤称一下，如果体重超过100斤，就不吃了，没有的话，就放心吃。结果……刚好101斤（泪目）……
# 请在下面代码框里用if...else...把酱酱的夜宵判断语句写出来。
# 【要点提示：1. 为酱酱的体重weight赋值；
# 2. 开始判断，如果if体重超过100斤，打印结果不吃了，否则else，打印结果放心吃吧；
# 3. if和else语句后需跟英文冒号:】

weight=101
if weight>100:
    print("Don't eat")
else:
    print('Eat')


#  3. 多向判断：if…elif…else…


#通过上面的故事情节我们知道，在代码中，我们需要添加三个如果：
# 如果宝石数>=6，如果3<宝石数<=5，如果宝石数=0。并产生3个对应的执行结果。

stonenumber=5
#为宝石数量赋值
if stonenumber>=6:
    #条件：如果你拥有的宝石数量大于等于6个
    print('你拥有了毁灭宇宙的力量')
    #结果：显示‘就拥有了毁灭宇宙的力量’的结果
elif 3<stonenumber<=5:
    #条件：如果想让宝石数量停留在4至5个
    print('红女巫需要亲手毁掉幻视额头上的心灵宝石')
else:
    #条件：当赋值不满足if和elif条件时，执行else下的命令，宝石数量在3个以下
    print('需要惊奇队长逆转未来')
    #结果：显示‘需要惊奇队长逆转未来’的结果

#首先，第一行的赋值，也就是整个条件判断的大前提会按照从上到下的顺序挨个试一遍，看满足哪个条件，满足了就不往下走，不满足就继续试，试到出结果为止。
#其次，elif的运行本质上和else一样，都需要一个和elif平级的前提，但是这个前提只能是if。
       # vs:else 想正确运行，需要一个和else平级的前提，这个前提可以是if，也可以是其他命令，比如循环命令。
#最后，elif已经带有其他条件的意思，所以elif后也可以不接else。

import time
print('一切都化为虚无')
time.sleep(0.2)
print('一切都化为尘埃')


#   4. if嵌套

print('''考试成绩评价规则：
1. 如果成绩大于等于60分，就是及格，在此前提下：
  (1)如果成绩大于等于80分，属于优秀范围；
  (2)否则，属于一般范围；
2. 如果成绩小于60分，就是不及格，在此前提下：
  (1)如果成绩小于30分，平时太不认真，属于学渣了；
  (2)如果成绩大于等于30分，那么，至少还能抢救一下；''')

historyscore=26

if historyscore>=60:
    print('你已经及格')
    if historyscore>=80:
        print('你很优秀')
    else:
        print('你只是一般般')
else:
    print('不及格')
    if historyscore<30:
        print('学渣')
    else:
        print('还能抢救一下')
print('程序结束')

#首先，我们先从整体总览一下，这段彼得·帕克成绩评价规则的代码总共分为四部分（赋值、if、else、print()），两个大代码组。
#根据缩进看，这四个部分都是平级关系。
# 并且，在if和else的代码组里面，又包含了条件判断命令if...else...。这正是嵌套在实际代码中的使用方式。

#if嵌套由于涉及多个条件判断，并且是条件套条件的判断，所以对于新手来说，可能会将逻辑搞混。
# 为了理清逻辑，我们可采用扒洋葱大法写if嵌套。
# 如果我们想要自己写出上面“彼得·帕克的历史成绩”那样的嵌套代码，

# 第一步就是：我们要搞定最外层那张皮，将最基础的命令和条件写出来。
#       那么，我们的思考逻辑应该是这样
#      （1）把彼得·帕克26分的历史成绩赋值到变量historyscore；
#      （2）用if…else写最基础判断条件如果historyscore>=60时，打印你已经及格，否则，打印不及格；
#      （3）用print()输出程序结束。

historyscore=26
if historyscore>=60:
    print('Pass')
else:
    print('Fail')
print('done')

#第二步，在“第一层皮”里装东西。也就是在条件【historyscore>=60】下，增加额外条件。
#     其中，额外条件1：当历史成绩大于80分，显示结果你很优秀；
#     额外条件2：当历史成绩在60到80分之间，显示结果：你只是一般般。

historyscore=26
if historyscore>=60:
    print('Pass')
    if historyscore>80:
        print('Excellent!')
    else:
        print('Good')
else:
    print('Fail')
print('done')

# 最后一步，你要为另一个大条件else增加额外条件了！
# 其中，额外条件1：当历史成绩小于60，同时还小于30时，输出结果学渣；
# 额外条件2：当历史成绩小于60，但大于等于30时，输出结果还能抢救一下。

historyscore=26
if historyscore>=60:
    print('Pass')
    if historyscore>80:
        print('Excellent!')
    else:
        print('Good')
else:
    print('Fail')
    if historyscore<30:
        print('Oh NO!')
    else:
        print("Dont't worry")
print('done')


# HW1:
print('''题目要求

请你写出一段代码，在一颗宝石都没偷回来的赋值下，进行条件判断，并产生对应的结果：
1.如果偷回的宝石数是4颗及以上，输出结果获得了打败灭霸的力量，反杀稳了
2.如果偷回的宝石数是1-3颗，输出结果可以全员出动，殊死一搏
3.如果偷回的宝石数是0颗，输出结果没办法了，只能尝试呼叫惊奇队长
注意：标点符号都为英文格式''')

stonenumber=0
if stonenumber>=4:
    print('获得了打败灭霸的力量，反杀稳了')
elif 1<=stonenumber<=3:
    print('可以全员出动，殊死一搏')
else:
    print('没办法了，只能尝试呼叫惊奇队长')


#HW2:
print('''题目要求

复仇者联盟的成员也是有工资的，然而，由于美国队长一直被冰封在北极，错过了多次调薪机会，
所以美国队长的工资一直是每月80美元。光荣挺进史塔克穷人榜前三名，并获封“美元队长”称号。
题目讲解
1.根据题目，我们知道这里涉及嵌套条件，所以可以用扒洋葱法梳理代码逻辑
2.可以先写最外层的if……elif……else……条件
3.根据题目的从属关系分析，最外层的if条件和else条件都有额外条件
4.依次在外层基础条件下添加额外条件

书写代码

请你写出一段代码，判断美国队长的工资每月80美元属于什么水平。

其中判断工资水平的代码需要满足如下条件：
1.如果月工资小于等于500美元，显示“欢迎进入史塔克穷人帮前三名”
1.1如果月工资在100-500美元之间，显示“请找弗瑞队长加薪”
1.2如果月工资小于等于100美元，显示“恭喜您荣获“美元队长”称号！”

2.如果月工资在500-1000美元之间（含1000美元），打印“祝贺您至少可以温饱了。”

3.其他情况下，如果工资大于1000美元，打印“经济危机都难不倒您！”
3.1如果工资在1000-20000美元（含20000美元）之间，打印“您快比钢铁侠有钱了！”
3.2如果月工资大于20000美元，打印“您是不是来自于瓦坎达国？”

4.不管赋值改变后输出结果如何，都需固定打印“程序结束”''')

salary=80
if salary<=500:
    print('欢迎进入史塔克穷人帮前三名')
    if 100<salary<=500:              #!!!  if salary<100
        print('请找弗瑞队长加薪')
    else:
        print('恭喜您荣获“美元队长”称号！')
elif 500<salary<=1000:
    print('祝贺您至少可以温饱了。')
else:
    print('经济危机都难不倒您')
    if 1000<=salary<=2000:          #!!! if salary<=2000
        print('您快比钢铁侠有钱了！')
    else:
        print('您是不是来自于瓦坎达国？')
print('程序结束')

# HW3:

score = int(float(input('请输入你的成绩:')))
if score >=60:
    print("恭喜你，你的成绩及格啦")
else:
    print("你的成绩没有及格，要多加复习！")


# 学霸笔记线上阅览室:
# https://www.yuque.com/wangruoxuan-lx8yt/gg4q7o/im5tgg